{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/root.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/photography.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/photography/$photographyId.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/photography/index.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/derrickbol/dev/derrxb/app/entry.server.tsx\";\nimport * as route0 from \"/Users/derrickbol/dev/derrxb/app/root.tsx\";\nimport * as route1 from \"/Users/derrickbol/dev/derrxb/app/routes/photography.tsx\";\nimport * as route2 from \"/Users/derrickbol/dev/derrxb/app/routes/photography/$photographyId.tsx\";\nimport * as route3 from \"/Users/derrickbol/dev/derrxb/app/routes/photography/index.tsx\";\nimport * as route4 from \"/Users/derrickbol/dev/derrxb/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/photography\": {\n    id: \"routes/photography\",\n    parentId: \"root\",\n    path: \"photography\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/photography/$photographyId\": {\n    id: \"routes/photography/$photographyId\",\n    parentId: \"routes/photography\",\n    path: \":photographyId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/photography/index\": {\n    id: \"routes/photography/index\",\n    parentId: \"routes/photography\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route4\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import { LiveReload, Outlet } from \"remix\";\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <title>Derrxb - Photography and software</title>\n      </head>\n      <body>\n        <Outlet />\n        {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n      </body>\n    </html>\n  );\n}\n", "import { Outlet } from \"remix\";\n\nexport default function JokesRoute() {\n  return (\n    <div>\n      <h1>Photography</h1>\n      <main>\n        <Outlet />\n      </main>\n    </div>\n  );\n}\n", "import cloudinary from \"cloudinary\";\nimport { json, LoaderFunction, useLoaderData } from \"remix\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  cloudinary.v2.config({\n    cloud_name: \"derrxb\",\n    api_key: \"824895549433489\",\n    api_secret: \"yKNhsv-HefYGCRXf-0WjnYjpVSM\",\n    secure: true,\n  });\n\n  const folderName = params?.photographyId as string;\n  const folderResult = await cloudinary.v2.search\n    .expression(`${folderName}`)\n    .sort_by(\"public_id\", \"desc\")\n    .max_results(15)\n    .execute();\n  const images = folderResult.resources as {\n    asset_id: string;\n    url: string;\n    secure_url: string;\n    filename: string;\n    public_id: string;\n  }[];\n\n  return json({\n    images: images.map((image) => ({\n      id: image.public_id,\n      url: image.url,\n      secure_url: image.secure_url,\n      name: image.filename,\n    })),\n  });\n};\n\nexport default function PhotographyRoute() {\n  const data = useLoaderData() as {\n    images: { id: string; url: string; name: string }[];\n  };\n\n  return (\n    <div>\n      <h1>Title</h1>\n      {data.images.map((item) => (\n        <img\n          src={item.url}\n          key={item.id}\n          style={{ height: \"250px\", width: \"480px\" }}\n        />\n      ))}\n    </div>\n  );\n}\n", "export default function PhotographyIndexRoute() {\n  return (\n    <div>\n      <p>Here's a random photo:</p>\n    </div>\n  );\n}\n", "export default function Index() {\n  return (\n    <div>\n      <h1>Hi</h1>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
