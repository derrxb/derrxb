{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/root.tsx", "../app/hooks/useDarkMode.tsx", "../app/components/mode.tsx", "../app/utils/theme.server.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/stories/$storyId.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/stories/index.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/photography.tsx", "route-module:/Users/derrickbol/dev/derrxb/app/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/derrickbol/dev/derrxb/app/entry.server.tsx\";\nimport * as route0 from \"/Users/derrickbol/dev/derrxb/app/root.tsx\";\nimport * as route1 from \"/Users/derrickbol/dev/derrxb/app/routes/stories/$storyId.tsx\";\nimport * as route2 from \"/Users/derrickbol/dev/derrxb/app/routes/stories/index.tsx\";\nimport * as route3 from \"/Users/derrickbol/dev/derrxb/app/routes/photography.tsx\";\nimport * as route4 from \"/Users/derrickbol/dev/derrxb/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/stories/$storyId\": {\n    id: \"routes/stories/$storyId\",\n    parentId: \"root\",\n    path: \"stories/:storyId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/stories/index\": {\n    id: \"routes/stories/index\",\n    parentId: \"root\",\n    path: \"stories\",\n    index: true,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/photography\": {\n    id: \"routes/photography\",\n    parentId: \"root\",\n    path: \"photography\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route4\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "import {\n  json,\n  Link,\n  Links,\n  LinksFunction,\n  LiveReload,\n  LoaderFunction,\n  Meta,\n  Outlet,\n  Scripts,\n  useLoaderData,\n} from \"remix\";\nimport Mode from \"./components/mode\";\nimport styles from \"./styles/app.css\";\nimport { getThemeSession } from \"./utils/theme.server\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\ntype LoaderData = {\n  mode: \"dark\" | \"light\";\n};\nexport const loader: LoaderFunction = async ({ request }) => {\n  const themeSession = await getThemeSession(request);\n\n  return json({ mode: themeSession.getTheme() } as LoaderData);\n};\n\nexport default function App() {\n  const { mode } = useLoaderData<LoaderData>();\n\n  return (\n    <html lang=\"en\" className={mode}>\n      <head>\n        <meta charSet=\"utf-8\" className={mode} />\n        <title>Derrxb - Photography and software</title>\n        <Meta />\n        <Links />\n      </head>\n\n      <body>\n        <nav className=\"flex h-20 items-center px-24 w-full z-10\">\n          <Link\n            to=\"/\"\n            className=\"font-bold text-2xl text-gray-800 dark:text-white\"\n          >\n            DERRXB\n          </Link>\n\n          <ul className=\"flex ml-auto items-center\">\n            <li>\n              <Link\n                to=\"/stories\"\n                className=\"font-semibold text-gray-600 px-4 hover:text-gray-900 dark:text-white dark:hover:text-gray-500\"\n              >\n                Stories\n              </Link>\n            </li>\n\n            <li>\n              <Link\n                to=\"/software\"\n                className=\"font-semibold text-gray-600 px-4 hover:text-gray-900 dark:text-white dark:hover:text-gray-500\"\n              >\n                Software\n              </Link>\n            </li>\n\n            <li>\n              <Link\n                to=\"/software\"\n                className=\"font-semibold text-gray-600 px-4 hover:text-gray-900 dark:text-white dark:hover:text-gray-500\"\n              >\n                About\n              </Link>\n            </li>\n\n            <Mode />\n          </ul>\n        </nav>\n\n        <Outlet />\n        <Scripts />\n\n        {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n      </body>\n    </html>\n  );\n}\n", "import Cookies from \"js-cookie\";\nimport { useEffect, useState } from \"react\";\n\ntype mode = \"dark\" | \"light\";\n\nconst useDarkMode = () => {\n  const [mode, setInternalMode] = useState<mode>(\n    typeof window !== \"undefined\"\n      ? (Cookies.get(\"mode\") as mode) || \"light\"\n      : \"light\"\n  );\n\n  useEffect(() => {\n    if (Cookies.get(\"mode\")) {\n      const savedMode = Cookies.get(\"mode\") as mode;\n      window.document.documentElement.classList.add(savedMode);\n    }\n  }, []);\n\n  useEffect(() => {\n    const prevMode = mode === \"dark\" ? \"light\" : \"dark\";\n\n    window.document.documentElement.classList.remove(prevMode);\n    window.document.documentElement.classList.add(mode);\n  }, [mode]);\n\n  const setMode = (nextMode: mode) => {\n    Cookies.set(\"mode\", nextMode);\n    setInternalMode(nextMode);\n  };\n\n  return {\n    mode,\n    setMode,\n  };\n};\n\nexport default useDarkMode;\n", "import useDarkMode from \"../hooks/useDarkMode\";\n\nconst Mode = () => {\n  const { mode, setMode } = useDarkMode();\n\n  const handleClick = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n    } else {\n      setMode(\"dark\");\n    }\n  };\n\n  return (\n    <button\n      onClick={handleClick}\n      className=\"font-semibold text-gray-600 px-4 hover:text-gray-800 dark:text-white\"\n    >\n      {mode === \"light\" ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={3}\n            d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n          />\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={3}\n            d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n          />\n        </svg>\n      )}\n    </button>\n  );\n};\n\nexport default Mode;\n", "import { createCookieSessionStorage } from \"remix\";\n\nconst themeStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"MODE\",\n    secure: false,\n    sameSite: \"lax\",\n    path: \"/\",\n    httpOnly: true,\n  },\n});\n\nasync function getThemeSession(request: Request) {\n  const session = await themeStorage.getSession(request.headers.get(\"Cookie\"));\n\n  return {\n    getTheme: (): \"dark\" | \"light\" => {\n      const themeValue = session.get(\"theme\");\n      return themeValue === \"dark\" || themeValue === \"light\"\n        ? themeValue\n        : \"dark\";\n    },\n    setTheme: (theme: \"dark\" | \"light\") => session.set(\"theme\", theme),\n    commit: () => themeStorage.commitSession(session),\n  };\n}\n\nexport { getThemeSession };\n", "import cloudinary from \"cloudinary\";\nimport { json, LoaderFunction, useLoaderData } from \"remix\";\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  cloudinary.v2.config({\n    cloud_name: \"derrxb\",\n    api_key: \"824895549433489\",\n    api_secret: \"yKNhsv-HefYGCRXf-0WjnYjpVSM\",\n    secure: true,\n  });\n\n  const folderName = params?.photographyId as string;\n  const folderResult = await cloudinary.v2.search\n    .expression(`${folderName}`)\n    .sort_by(\"public_id\", \"desc\")\n    .max_results(15)\n    .execute();\n  const images = folderResult.resources as {\n    asset_id: string;\n    url: string;\n    secure_url: string;\n    filename: string;\n    public_id: string;\n  }[];\n\n  return json({\n    images: images.map((image) => ({\n      id: image.public_id,\n      url: image.url,\n      secure_url: image.secure_url,\n      name: image.filename,\n    })),\n  });\n};\n\nexport default function PhotographyRoute() {\n  const data = useLoaderData() as {\n    images: { id: string; url: string; name: string }[];\n  };\n\n  return (\n    <div>\n      <h1>Title</h1>\n      {data.images.map((item) => (\n        <img\n          src={item.url}\n          key={item.id}\n          style={{ height: \"250px\", width: \"480px\" }}\n        />\n      ))}\n    </div>\n  );\n}\n", "export default function PhotographyIndexRoute() {\n  return (\n    <div>\n      <p>Here's a random photo:</p>\n    </div>\n  );\n}\n", "import { Outlet } from \"remix\";\n\nexport default function JokesRoute() {\n  return (\n    <div>\n      <h1>Photography</h1>\n      <main>\n        <Outlet />\n      </main>\n    </div>\n  );\n}\n", "import { motion } from \"framer-motion\";\nimport React from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Link } from \"remix\";\nimport coverDark from \"../../public/images/cover-dark.jpg\";\nimport coverLight from \"../../public/images/cover-light.jpg\";\n\nexport default function Index() {\n  const [ref, inView] = useInView();\n\n  React.useEffect(() => {\n    if (inView) {\n      window?.document.querySelector(\"nav\")?.classList.add(\"fixed\");\n    } else {\n      window.document.querySelector(\"nav\")?.classList.remove(\"fixed\");\n    }\n  }, [inView]);\n\n  return (\n    <>\n      <div className=\"flex h-full\" ref={ref}>\n        <motion.div\n          className=\"flex w-1/2 items-center justify-center p-8 px-24 dark:bg-black\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 2 }}\n        >\n          <motion.h1\n            className=\"m-0 text-6xl font-bold dark:text-white\"\n            initial={{ paddingTop: 48 }}\n            animate={{ paddingTop: 0 }}\n            transition={{ duration: 1 }}\n          >\n            I capture stories and build software with{\" \"}\n            <motion.span className=\"text-yellow-500 hover:underline\">\n              <Link to=\"/stories\">photography</Link>\n            </motion.span>{\" \"}\n            and\n            <motion.span className=\"text-green-500 pl-2 hover:underline\">\n              <Link to=\"/software\">code</Link>\n            </motion.span>\n            .\n          </motion.h1>\n        </motion.div>\n\n        <div className=\"w-1/2\">\n          <picture className=\"w-full\">\n            <motion.source\n              src={coverDark}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 1 }}\n              className={\"h-screen w-full object-cover hidden dark:inline\"}\n            />\n\n            <motion.img\n              src={coverDark}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 1 }}\n              className={\"h-screen w-full object-cover hidden dark:inline\"}\n            />\n\n            <motion.source\n              src={coverLight}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 1 }}\n              className={\"h-screen w-full object-cover dark:hidden\"}\n            />\n\n            <motion.img\n              src={coverLight}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 1 }}\n              className={\"h-screen w-full object-cover dark:hidden\"}\n            />\n          </picture>\n        </div>\n      </div>\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
